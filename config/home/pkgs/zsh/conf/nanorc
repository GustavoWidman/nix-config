## When soft line wrapping is enabled, make it wrap lines at blanks
## (tabs and spaces) instead of always at the edge of the screen.
# set atblanks

## Automatically indent a newly created line to the same number of
## tabs and/or spaces as the preceding line -- or as the next line
## if the preceding line is the beginning of a paragraph.
set autoindent

## Use bold text instead of reverse video text.
# set boldtext

## Remember the used search/replace strings for the next session.
# set historylog

## Display a "scrollbar" on the righthand side of the edit window.
# set indicator

## Display line numbers to the left (and any anchors in the margin).
set linenumbers

## Enable vim-style lock-files.  This is just to let a vim user know you
## are editing a file [s]he is trying to edit and vice versa.  There are
## no plans to implement vim-style undo state in these files.
# set locking

## Fall back to slow libmagic to try and determine an applicable syntax.
# set magic

## The opening and closing brackets that are found by a matching-bracket
## search.  This may not contain blank characters.  The opening brackets
## must come before the closing ones, and they must be in the same order.
# set matchbrackets "(<[{)>]}"

## Suppress the title bar and show the filename plus a cursor-position
## percentage in the space of the status bar.
# set minibar

## Enable mouse support, if available for your system.  When enabled,
## mouse clicks can be used to place the cursor, set the mark (with a
## double click), and execute shortcuts.  The mouse will work in the
## X Window System, and on the console when gpm is running.
# set mouse

## Remember the cursor position in each file for the next editing session.
# set positionlog

## Make status-bar messages disappear after 1 keystroke instead of after 20.
set quickblank

## The regular expression that matches quoting characters in email
## or line-comment introducers in source code.  The default is:
# set quotestr "^([     ]*([!#%:;>|}]|//))+"

## Do regular-expression searches by default.
## Regular expressions are of the extended type (ERE).
# set regexp

## Spread overlong lines over multiple screen lines.
set softwrap

## Use this tab size instead of the default; it must be greater than 0.
set tabsize 4

## Paint the interface elements of nano.  These are examples; there are
## no colors by default, except for errorcolor and spotlightcolor.
set titlecolor lightwhite,grey
set promptcolor lightwhite
set statuscolor lightwhite
set errorcolor red
set spotlightcolor black,lightyellow
set selectedcolor grey,lightwhite
set stripecolor yellow
set scrollercolor cyan
set numbercolor white
set keycolor lightwhite
set functioncolor white

## In root's .nanorc you might want to use:
# set titlecolor bold,white,magenta
# set promptcolor black,yellow
# set statuscolor bold,white,magenta
# set errorcolor bold,white,red
# set spotlightcolor black,orange
# set selectedcolor lightwhite,cyan
# set stripecolor ,yellow
# set scrollercolor magenta
# set numbercolor magenta
# set keycolor lightmagenta
# set functioncolor magenta

# include "/usr/share/nano/*.nanorc"
